Test Case: test-1.txt
TELL
P1 => Q; P2 & P3 => R; Q => S; R => T; T & S => U; U => V; P1;
ASK
V
Program Output:
NO


Test Case: test-2.txt
TELL
p2 => p3; p3 => p1; c => e; b&e => f; f&g => h; p2&p1&p3 => d; p1&p3 => c; a; b; p2;
ASK
d
Program Output:
YES; 3


Test Case: test-3.txt
TELL
p2 => p3; p3 => p1; c => e; b&e => f; f&g => h; p2&p1&p3 => d; p1&p3 => c; a; b; p2;
ASK
h
Program Output:
NO


Test Case: test-4.txt
TELL
p2 => p3; p3 => p1; c => e; b&e => f; f&g => h; p2&p1&p3 => d; p1&p3 => c; a; b; p2;
ASK
j
Program Output:
NO


Test Case: test-5.txt
TELL
P => Q; L&M => P; B&L => M; A&P => L; A&B => L; A; B;
ASK
Q
Program Output:
YES; 1


Test Case: test-6.txt
TELL
P => Q; L&M => P; B&L => M; A&P => L; A; B;
ASK
Q
Program Output:
NO


Test Case: test-7.txt
TELL
P => Q; R => Q; S => Q; T => Q; U => Q; P;
ASK
Q
Program Output:
YES; 16


Test Case: test-8.txt
TELL
Q
ASK
Q
Program Output:
YES; 1


Test Case: test-9.txt
TELL
P; A; C; E; Q; V; Z;
ASK
P
Program Output:
YES; 1


Test Case: test-10.txt
TELL
P => Q ; Q => R ; R => P;
ASK
R
Program Output:
NO


Test Case: test-11.txt
TELL
P => Q ; P => R ; P => Q;
ASK
Q
Program Output:
NO


Test Case: test-12.txt
TELL
A => B; C => D; E => F; G => H; I => J; A;
ASK
J
Program Output:
NO


Test Case: test-13.txt
TELL
(a <=> (c => ~d)) & b & (b => a); c; ~f || g;
ASK
d
Program Output:
NO


Test Case: test-14.txt
TELL
(a <=> (c => ~d)) & b & (b => a); c; ~f || g;
ASK
~d & (~g => ~f)
Program Output:
YES; 3


Test Case: test-15.txt
TELL
(a <=> (c => ~d)) & b & (b => a); c; ~f || g;
ASK
z
Program Output:
NO


Test Case: test-16.txt
TELL
(a <=> (c => ~d)) & b & (b => a); c; ~f || g;
ASK
~x & (~y => ~z)
Program Output:
NO


Test Case: test-17.txt
TELL
(a <=> ~c) & b & (~b => a); c; ~a || b;
ASK
b
Program Output:
YES; 1


Test Case: test-18.txt
TELL
(a <=> c); (b <=> c); (b <=> a); (d <=> c); (a <=> d); (c <=> d);
ASK
d <=> ~b
Program Output:
NO


Test Case: test-19.txt
TELL
(A => (B => (C => D))) & A;
ASK
D
Program Output:
NO


Test Case: test-20.txt
TELL
P => Q; Q => R; R => ~P;
ASK
P
Program Output:
NO


Test Case: test-21.txt
TELL
P || ~P;
ASK
P
Program Output:
NO


Test Case: test-22.txt
TELL
P & ~P;
ASK
P
Program Output:
YES; 0


Test Case: test-23.txt
TELL
(((~A <=> A) || (A => ~A) & (A || ~A)) <=> (A & ~A)) <=> ~A;
ASK
A
Program Output:
YES; 0


Test Case: test-24.txt
TELL
(~A & ~C) || (~D => ~E); ~C <=> ~F; ~F => ~B;
ASK
B
Program Output:
NO


